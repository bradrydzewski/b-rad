{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "defines the swagger specification.",
    "version": "1.0.0"
  },
  "basePath": "/api/v1",
  "paths": {
    "/{{toLower project}}s": {
      "post": {
        "tags": [
          "{{toLower project}}"
        ],
        "summary": "Create a new {{toLower project}}.",
        "operationId": "create{{title project}}",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/{{title project}}Input"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/{{toLower project}}"
          }
        }
      }
    },
    "/{{toLower project}}s/{{`{`}}{{toLower project}}{{`}`}}": {
      "get": {
        "tags": [
          "{{toLower project}}"
        ],
        "summary": "Get the {{toLower project}} with the matching {{toLower project}} id.",
        "operationId": "find{{title project}}",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "ID",
            "name": "{{toLower project}}",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/{{toLower project}}"
          }
        }
      },
      "delete": {
        "tags": [
          "{{toLower project}}"
        ],
        "summary": "Delete the {{toLower project}} with the matching {{toLower project}} id.",
        "operationId": "delete{{title project}}",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "ID",
            "name": "{{toLower project}}",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      },
      "patch": {
        "tags": [
          "{{toLower project}}"
        ],
        "summary": "Update the {{toLower project}} with the matching {{toLower project}} id.",
        "operationId": "update{{title project}}",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "ID",
            "name": "{{toLower project}}",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/{{title project}}Input"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/{{toLower project}}"
          }
        }
      }
    },
    "/{{toLower project}}s/{{`{`}}{{toLower project}}{{`}`}}/members": {
      "get": {
        "tags": [
          "member"
        ],
        "summary": "Get the list of all {{toLower project}} members.",
        "operationId": "getMemberList",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "{{title project}}",
            "name": "{{toLower project}}",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/memberList"
          }
        }
      },
      "post": {
        "tags": [
          "member"
        ],
        "summary": "Create a new {{toLower project}} member.",
        "operationId": "createMember",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "{{title project}}",
            "name": "{{toLower project}}",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MembershipInput"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/member"
          }
        }
      }
    },
    "/{{toLower project}}s/{{`{`}}{{toLower project}}{{`}`}}/members/{user}": {
      "get": {
        "tags": [
          "member"
        ],
        "summary": "Get the {{toLower project}} member with the matching email address.",
        "operationId": "getMember",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "{{title project}}",
            "name": "{{toLower project}}",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Email",
            "name": "user",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/member"
          }
        }
      },
      "delete": {
        "tags": [
          "member"
        ],
        "summary": "Delete the {{toLower project}} member.",
        "operationId": "deleteMember",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "{{title project}}",
            "name": "{{toLower project}}",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Email",
            "name": "user",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      },
      "patch": {
        "tags": [
          "member"
        ],
        "summary": "Update the {{toLower project}} member.",
        "operationId": "updateMember",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "{{title project}}",
            "name": "{{toLower project}}",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Email",
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MembershipInput"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/member"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get the authenticated user.",
        "operationId": "getCurrentUser",
        "responses": {
          "200": {
            "$ref": "#/responses/user"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get the list of all registered users.",
        "operationId": "getUserList",
        "responses": {
          "200": {
            "$ref": "#/responses/userList"
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create a new user.",
        "operationId": "createUser",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserInput"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/user"
          }
        }
      }
    },
    "/users/{{toLower project}}s": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get the currently authenticated user's {{toLower project}} list.",
        "operationId": "get{{title project}}List",
        "responses": {
          "200": {
            "$ref": "#/responses/{{toLower project}}List"
          }
        }
      }
    },
    "/users/{user}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get the user with the matching email address.",
        "operationId": "getUser",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Email",
            "name": "user",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/user"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete the user with the matching email address.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Email",
            "name": "user",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      },
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Update the user with the matching email address.",
        "operationId": "updateUser",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Email",
            "name": "user",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserInput"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/user"
          }
        }
      }
    }
  },
  "definitions": {
    "Bool": {
      "description": "It does not consider false values to be null.\nIt will decode to null, not false, if null.",
      "type": "object",
      "title": "Bool is a nullable bool.",
      "properties": {
        "Bool": {
          "type": "boolean"
        },
        "Valid": {
          "type": "boolean"
        }
      },
      "x-go-package": "gopkg.in/guregu/null.v4"
    },
    "Member": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "x-go-name": "Email"
        },
        "role": {
          "$ref": "#/definitions/Role"
        }
      }
    },
    "MembershipInput": {
      "type": "object",
      "properties": {
        "{{toLower project}}": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "{{title project}}"
        },
        "role": {
          "$ref": "#/definitions/Role"
        },
        "user": {
          "type": "string",
          "x-go-name": "User"
        }
      }
    },
    "{{title project}}": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean",
          "x-go-name": "Active"
        },
        "created": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Created"
        },
        "desc": {
          "type": "string",
          "x-go-name": "Desc"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "ID"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "updated": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Updated"
        }
      }
    },
    "{{title project}}Input": {
      "type": "object",
      "properties": {
        "desc": {
          "$ref": "#/definitions/String"
        },
        "name": {
          "$ref": "#/definitions/String"
        }
      }
    },
    "Role": {
      "type": "integer",
      "format": "int64",
      "title": "Role defines the member role."
    },
    "String": {
      "description": "It will marshal to null if null. Blank string input will be considered null.",
      "type": "object",
      "title": "String is a nullable string. It supports SQL and JSON serialization.",
      "properties": {
        "String": {
          "type": "string"
        },
        "Valid": {
          "type": "boolean"
        }
      },
      "x-go-package": "gopkg.in/guregu/null.v4"
    },
    "User": {
      "type": "object",
      "properties": {
        "admin": {
          "type": "boolean",
          "x-go-name": "Admin"
        },
        "authed": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Authed"
        },
        "created": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Created"
        },
        "email": {
          "type": "string",
          "x-go-name": "Email"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "ID"
        },
        "updated": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Updated"
        }
      }
    },
    "UserInput": {
      "type": "object",
      "properties": {
        "admin": {
          "$ref": "#/definitions/Bool"
        },
        "email": {
          "$ref": "#/definitions/String"
        },
        "password": {
          "$ref": "#/definitions/String"
        }
      }
    }
  },
  "responses": {
    "member": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Member"
      }
    },
    "memberList": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Member"
        }
      }
    },
    "{{toLower project}}": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/{{title project}}"
      }
    },
    "{{toLower project}}List": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/{{title project}}"
        }
      }
    },
    "user": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/User"
      }
    },
    "userList": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/User"
        }
      }
    }
  }
}